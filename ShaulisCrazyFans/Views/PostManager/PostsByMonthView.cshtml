@model ICollection<int>

@{
    ViewBag.Title = "PostsByMonthView";

    string dataForGraph = "month,posts";
    
    for (int i=0; i<12; i++)
    {
        dataForGraph += "\n" + ViewBag.Months[i] + "," + ViewBag.PostsPerMonth[i];
    }
}

@section Styles {
    <style>
        .bar {
            fill: #85DB33;
        }

            .bar:hover {
                fill: #3DB833;
            }

        .axis {
            font: 10px sans-serif;
        }

            .axis path,
            .axis line {
                fill: none;
                stroke: #000;
                shape-rendering: crispEdges;
            }

        .x.axis path {
            display: none;
        }
    </style>
}

@section Scripts {
<script src="https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.5/d3.min.js"></script>
<script>
function DrawGraph(data) {
    var margin = { top: 20, right: 20, bottom: 30, left: 40 },
        width = 620 - margin.left - margin.right,
        height = 400 - margin.top - margin.bottom;

    var x = d3.scale.ordinal()
        .rangeRoundBands([0, width], .1);

    var y = d3.scale.linear()
        .range([height, 0]);

    var xAxis = d3.svg.axis()
        .scale(x)
        .orient("bottom");

    var yAxis = d3.svg.axis()
        .scale(y)
        .orient("left")
        .ticks(10);

    var svg = d3.select("body").select("svg")
        .attr("width", width + margin.left + margin.right)
        .attr("height", height + margin.top + margin.bottom)
        .append("g")
        .attr("transform", "translate(" + margin.left + "," + margin.top + ")");

    data = d3.csv.parse(data)

    x.domain(data.map(function (d) { return d.month; }));
    y.domain([0, d3.max(data, function (d) { return d.posts; })]);

    svg.append("g")
        .attr("class", "x axis")
        .attr("transform", "translate(0," + height + ")")
        .call(xAxis);

    svg.append("g")
        .attr("class", "y axis")
        .call(yAxis)
        .append("text")
        .attr("transform", "rotate(0)")
        .attr("x", 0)
        .attr("y", -20)
        .attr("dy", ".71em")
        .style("text-anchor", "end")
        .text("Posts");

    svg.selectAll(".bar")
        .data(data)
        .enter().append("rect")
        .attr("class", "bar")
        .attr("x", function (d) { return x(d.month); })
        .attr("width", x.rangeBand())
        .attr("y", function (d) { return y(d.posts); })
        .attr("height", function (d) { return height - y(d.posts); });
}

function type(d) {
    d.posts = +d.posts;
    return d;
}

</script>
}

<h2>Posts distribution by Month</h2>

<table class="table">
    <tr>
        <th>
            Month
        </th>
    @for (int i = 0; i < 12; i++)
    {
        <td>
            @ViewBag.Months[i]
        </td>
    }
    </tr>
    <tr>
        <th>
            Posts
        </th>
    @for (int i = 0; i < 12; i++)
    {
        <td>
            @ViewBag.PostsPerMonth[i]
        </td>
    }
    </tr>
</table>

<div>
    <br /><br />
    <input id="data" type="hidden" value="@dataForGraph" />
    <svg id="svg" onload='DrawGraph(document.getElementById("data").value)' />
</div>