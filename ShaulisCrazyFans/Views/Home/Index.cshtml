@{
    ViewBag.Title = "Home Page";
}
@model IEnumerable<ShaulisCrazyFans.Models.Post>
            
<section>
    <div>
        @using (Html.BeginForm("Search", "Home")) {
            <h3>Filter Posts By:</h3>
            <br />
            <!-- Date boxes for filtering using dates -->
            <p><label>Dates Range: </label><input type="date" name="filter_date_start"> to <input type="date" name="filter_date_end"></p>
            <p><label>Writer: </label><input type="text" name="filter_writer"></p>
            <!-- Make email address valid -->
            <p><label>Title: </label><input type="text" name="filter_title"></p>
            <p><label>Keywords: </label><input type="text" name="filter_keywords"></p>
            <!-- Make comment numbers within range of 1 - 10 -->
            <p><label>Minimum Comments: </label><input type="number" name="filter_min_comments" min="1" max="10"></p>
            <p><input type="submit" value="Filter"></p>
        }
    </div>
    <hr /><br />
</section>

@foreach (var item in Model)
{
    <article class="blogPost">
        <header>
            <h2>@item.Title</h2>
            <p>Posted on @item.ReleaseDate by <a href="@item.AuthorSite">@item.Author</a> - <a href="#comments">@item.Comments.Count comments</a></p>
        </header>
        <div>
            <p>@item.Content</p>
        </div>
        @if (File.Exists(Server.MapPath("~/Uploads/") + item.Id + ".png"))
        {
            <div id="@(item.Id + "div")">
                <img id="@(item.Id + "img")" src="~/Uploads/@(item.Id + ".png")" width="340" style="visibility: visible;" />
                <script>
                    setTimeout(function () {
                        var container = document.getElementById("@(item.Id + "div")");
                        var img = document.getElementById("@(item.Id + "img")");
                        var canvas = document.createElement("canvas");
                        canvas.id = "canvas" + "@(item.Id)";
                        canvas.width = 320;
                        canvas.height = 240;
                        container.appendChild(canvas);
                        var context = canvas.getContext("2d");
                        context.drawImage(img, 0, 0, 320, 240/*, 0, 0, 320, 240*/);
                        img.remove();
                    }, 100);
                </script>
            </div>
        }
        <br />
        @if (File.Exists(Server.MapPath("~/Uploads/") + item.Id + ".mp4"))
        {
            <div>
                <video width="320" height="240" controls preload="auto">
                    <source src="~/Uploads/@(item.Id + ".mp4")" />
                </video>
            </div>
        }
    </article>
    <section id="comments">
        <h3>Comments</h3>
        @foreach (var comment in item.Comments)
        {
            <article>
                <header>
                    <a href="@comment.AuthorSite">@comment.Author</a>
                </header>
                <p style="font-weight:bold">@comment.Title</p>
                <p>@comment.Content</p>
            </article>
        }
    </section>
        
    using (Html.BeginForm("Create", "Home")) {
        @Html.AntiForgeryToken()
    
        ShaulisCrazyFans.Models.Comment c = (ShaulisCrazyFans.Models.Comment)ViewBag.NewComment;        
    
        <div class="form-horizontal">
            <h3>Post a comment</h3>
            @Html.ValidationSummary(true)
            @Html.Hidden("c.PostId", (int)item.Id)
            <p>
                @Html.LabelFor(model => c.Title, new { @class = "control-label col-md-2" })
                @Html.EditorFor(model => c.Title)
                @Html.ValidationMessageFor(model => c.Title)
            </p>
            <p>
                @Html.LabelFor(model => c.Author, new { @class = "control-label col-md-2" })
                @Html.EditorFor(model => c.Author)
                @Html.ValidationMessageFor(model => c.Author)
            </p>
            <p>
                @Html.LabelFor(model => c.AuthorSite, new { @class = "control-label col-md-2" })
                @Html.EditorFor(model => c.AuthorSite)
                @Html.ValidationMessageFor(model => c.AuthorSite)
            </p>
            <p>
                @Html.LabelFor(model => c.Content, new { @class = "control-label col-md-2" })
                @Html.TextAreaFor(model => c.Content)
                @Html.ValidationMessageFor(model => c.Content)
            </p>
            <p>
                <input type="submit" value="Post comment" class="btn btn-default" />
            </p>
        </div>
    }
}
